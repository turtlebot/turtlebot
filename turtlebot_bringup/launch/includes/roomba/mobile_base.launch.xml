<!--
  Create's implementation of turtlebot's mobile base.
 -->
<launch>
  <arg name="serialport"/>
  <arg name="manager" default="none" /><!-- necessary parameter, but manager not actually needed for roomba base-->

  <!-- Turtlebot Driver -->
  <node pkg="create_node" type="turtlebot_node.py" name="turtlebot_node" respawn="true" args="--respawnable">
    <param name="robot_type" value="roomba" />
    <param name="has_gyro" value="false" />
    <param name="bonus" value="false" />
    <param name="update_rate" value="30.0" />
    <param name="port" value="$(arg serialport)" />
    <remap from="cmd_vel" to="mobile_base/commands/velocity" />
    <remap from="turtlebot_node/sensor_state" to="mobile_base/sensors/core" />
    <remap from="imu/data" to="mobile_base/sensors/imu_data" />
    <remap from="imu/raw" to="mobile_base/sensors/imu_data_raw" />
  </node>

  <!-- Enable breaker 1 for the kinect -->
  <node pkg="create_node" type="kinect_breaker_enabler.py" name="kinect_breaker_enabler"/>

  <!-- Load create and gyro calibration  -->
  <node pkg="create_node" type="load_calib.py" name="create_load_calibration">
    <remap from="cmd_vel" to="mobile_base/commands/velocity" />
  </node>
  
  <!-- The odometry estimator -->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <remap from="imu_data" to="imu/data"/>
    <param name="freq" value="10.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="publish_tf" value="true"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="output_frame" value="odom"/>
  </node>
</launch>
